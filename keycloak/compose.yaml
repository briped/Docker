networks:
  stack:
  proxy:
    external: true

services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    hostname: ${HOSTNAME}
    restart: unless-stopped
    command: start
    depends_on:
      - keycloak_db
    env_file:
      - stack.env
    volumes:
      - /opt/keycloak/themes:/opt/keycloak/themes
      #- /opt/keycloak/logs:/var/log
    #ports:
    #  - ${KC_HTTPS_PORT:-8443}:${KC_HTTPS_PORT:-8443}
    #  - ${KC_HTTP_PORT:-8080}:${KC_HTTP_PORT:-8080}
    #  - ${KC_HTTP_MANAGEMENT_PORT:-9000}:${KC_HTTP_MANAGEMENT_PORT:-9000}
    networks:
      stack:
      proxy:
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.services.svc-keycloak.loadbalancer.server.scheme=http
      - traefik.http.services.svc-keycloak.loadbalancer.server.port=${KC_HTTP_PORT:-8080}
      - traefik.http.middlewares.mdw-bouncer-keycloak.plugin.crowdsecBouncer.crowdsecLapiScheme=http
      - traefik.http.middlewares.mdw-bouncer-keycloak.crowdsecBouncer.crowdsecLapiHost=crowdsec:8080
      - traefik.http.middlewares.mdw-bouncer-keycloak.plugin.crowdsecBouncer.crowdsecLapiKey=${CROWDSEC_LAPIKEY:?}
      - traefik.http.routers.rtr-keycloak.service=svc-keycloak
      - traefik.http.routers.rtr-keycloak.middlewares=mdw-bouncer-keycloak
      - traefik.http.routers.rtr-keycloak.entrypoints=https
      - traefik.http.routers.rtr-keycloak.rule=Host(`${KC_HOSTNAME}`) && ClientIP(`10.0.0.0/24`)

  keycloak_db:
    image: postgres:latest
    container_name: keycloak_db
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${KC_DB_URL_DATABASE:-keycloak}
      - POSTGRES_USER=${KC_DB_USERNAME:-keycloak}
      - POSTGRES_PASSWORD=${KC_DB_PASSWORD:?}
    volumes:
      - /opt/keycloak/db:/var/lib/postgresql/data
    networks:
      stack: