networks:
  stack:
  proxy:
    external: true

services:
  yabin:
    ## https://github.com/Yureien/YABin
    image: yureien/yabin:latest
    container_name: ${CONTAINER_NAME:-yabin}
    hostname: ${CONTAINER_HOSTNAME}
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - stack
      - proxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.rtr-yabin.entrypoints=https
      - traefik.http.routers.rtr-yabin.rule=Host(`${TRAEFIK_SUBJECT_CN:?}`)
      - traefik.http.middlewares.mdw-bouncer-yabin.plugin.crowdsecBouncer.crowdseclapikey=${CROWDSEC_LAPIKEY:-}
      - traefik.http.middlewares.mdw-bouncer-yabin.plugin.crowdsecBouncer.crowdseclapischeme=${CROWDSEC_LAPISCHEME:-http}
      - traefik.http.middlewares.mdw-bouncer-yabin.plugin.crowdsecBouncer.crowdseclapihost=${CROWDSEC_LAPIHOSTNAME:-crowdsec}:${CROWDSEC_LAPIHOSTPORT:-8080}
      - traefik.http.routers.rtr-yabin.middlewares=mdw-bouncer-yabin
      - traefik.http.services.svc-yabin.loadbalancer.server.scheme=http
      - traefik.http.services.svc-yabin.loadbalancer.server.port=${PORT:-3000}
      - traefik.http.routers.rtr-yabin.service=svc-yabin

  db:
    image: postgres:15-alpine
    container_name: ${CONTAINER_DB_NAME:-yabin_db}
    hostname: ${CONTAINER_HOSTNAME}
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER:-yabin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-Yet-Another-Key4-Pesky-Query-Language}
      - POSTGRES_DB=${DB_NAME:-yabin}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ${CONTAINER_DB_BASEPATH:-${CONTAINER_BASEPATH:-/opt/yabin}/db}:/var/lib/postgresql/data
    networks:
      - stack