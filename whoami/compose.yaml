networks:
  proxy:
    external: true

services:
  whoamiHTTP:
    image: traefik/whoami
    container_name: ${CONTAINER_NAME:-whoamiHTTP}
    hostname: ${HOSTNAME}
    restart: unless-stopped
    #command:
    #  - --port=${WHOAMI_PORT_NUMBER:-80}
    #  - --name=${WHOAMI_NAME}
    #  - --verbose=false
    #  - --cert=cert.crt
    #  - --key=cert.key
    #  - --ca=cacert.crt
    environment:
      - TZ=${TZ:-UTC}
      - WHOAMI_PORT_NUMBER=${WHOAMI_PORT_NUMBER:-80}
      - WHOAMI_NAME=${WHOAMI_NAME}
    volumes:
      - /etc/localtime:/etc/localtime:ro
    #ports:
    #  - ${WHOAMI_PORT_NUMBER:-80}:${WHOAMI_PORT_NUMBER:-80}
    networks:
      proxy:
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.rtr-whoami.entrypoints=https
      - traefik.http.routers.rtr-whoami.rule=Host(`${TRAEFIK_SUBJECT_CN:?}`)
      - traefik.http.services.svc-whoami.loadbalancer.server.scheme=http
      - traefik.http.services.svc-whoami.loadbalancer.server.port=${WHOAMI_PORT_NUMBER:-80}
      - traefik.http.routers.rtr-whoami.service=svc-whoami

  #whoamiTCP:
  #  image: traefik/whoamitcp
  #  container_name: ${CONTAINER_NAME:-whoamiTCP}
  #  hostname: ${HOSTNAME}
  #  restart: unless-stopped
  #  #command:
  #  #  - --port=:8080
  #  #  - --name=
  #  #  - --certFile=
  #  #  - --keyFile=
  #  #  - --banner=false
  #  environment:
  #    - TZ=${TZ:-UTC}
  #  ports:
  #    - 8080:8080/tcp

  #whoamiUDP:
  #  image: traefik/whoamiudp
  #  container_name: ${CONTAINER_NAME:-whoamiUDP}
  #  hostname: ${HOSTNAME}
  #  restart: unless-stopped
  #  #command:
  #  #  - --port=:8080
  #  #  - --name=
  #  environment:
  #    - TZ=${TZ:-UTC}
  #  ports:
  #    - 8080:8080/udp