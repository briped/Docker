networks:
  stack:
  proxy:
    external: true

services:
  zitadel:
    image: ghcr.io/zitadel/zitadel:latest
    container_name: zitadel
    hostname: ${HOSTNAME}
    restart: unless-stopped
    command: 'start-from-init --masterkeyFromEnv'
    depends_on:
      zitadel_db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      stack:
      proxy:
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.services.zitadel.loadbalancer.server.scheme=h2c
      - traefik.http.services.zitadel.loadbalancer.server.port=${ZITADEL_PORT:-8080}
      - traefik.http.services.zitadel.loadbalancer.passHostHeader=true
      - traefik.http.middlewares.zitadel-bouncer.plugin.crowdsecBouncer.crowdseclapikey=${CROWDSEC_LAPIKEY:?}
      - traefik.http.middlewares.zitadel-bouncer.plugin.crowdsecBouncer.crowdseclapischeme=http
      - traefik.http.middlewares.zitadel-bouncer.plugin.crowdsecBouncer.crowdseclapihost=crowdsec:8080
      - traefik.http.routers.zitadel.service=zitadel
      - traefik.http.routers.zitadel.middlewares=zitadel-bouncer
      - traefik.http.routers.zitadel.entrypoints=https
      - traefik.http.routers.zitadel.rule=Host(`${ZITADEL_EXTERNALDOMAIN:?}`)

  zitadel_db:
    image: postgres:16-alpine
    container_name: zitadel_db
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${ZITADEL_DATABASE_POSTGRES_DATABASE:-zitadel}
      - POSTGRES_USER=${ZITADEL_DATABASE_POSTGRES_USER_USERNAME:-zitadel}
      - POSTGRES_PASSWORD=${ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD:?}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/zitadel/db:/var/lib/postgresql/data
    networks:
      stack:
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
        - --quiet
        - --dbname=${POSTGRES_DB:-${ZITADEL_DATABASE_POSTGRES_DATABASE:-zitadel}}
        - --username=${POSTGRES_USER:-${ZITADEL_DATABASE_POSTGRES_ADMIN_USERNAME:-postgres}}
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'