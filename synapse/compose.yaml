networks:
  stack:
  proxy:
    external: true

services:
  synapse:
    image: docker.io/matrixdotorg/synapse:latest
    container_name: ${CONTAINER_NAME:-synapse}
    hostname: ${HOSTNAME}
    restart: unless-stopped
    ## Uncomment for first run, to generate config.
    ## Alternatively, run the following command in folder with this compose file.
    ## docker compose run --rm synapse generate
    #command:
    #  - generate
    depends_on:
      - db
    environment:
    ## Several environment variables were gleaned from the Github sourcefiles.
    ## https://github.com/element-hq/synapse/blob/75b788f49f005bbc70b459d30913f1f7abf847cb/docker/conf/homeserver.yaml
    ## https://github.com/element-hq/synapse/blob/75b788f49f005bbc70b459d30913f1f7abf847cb/docker/start.py
      - TZ=${TZ:-UTC}
      - UID=${UID:-991}
      - GID=${GID:-991}
      - SYNAPSE_REPORT_STATS=${SYNAPSE_REPORT_STATS:-no}
      - SYNAPSE_SERVER_NAME=${SYNAPSE_SERVER_NAME:-${TRAEFIK_SUBJECT_CN:?}}
      - SYNAPSE_HTTP_PORT=${SYNAPSE_HTTP_PORT:-8008}
      - SYNAPSE_NO_TLS=${SYNAPSE_NO_TLS:-true}
      - SYNAPSE_CONFIG_DIR=${SYNAPSE_CONFIG_DIR:-/data}
      - SYNAPSE_CONFIG_PATH=${SYNAPSE_CONFIG_PATH:-${SYNAPSE_CONFIG_DIR:-/data}/homeserver.yaml}
      - SYNAPSE_DATA_DIR=${SYNAPSE_DATA_DIR:-${SYNAPSE_CONFIG_DIR:-/data}}
      - SYNAPSE_WORKER=${SYNAPSE_WORKER:-synapse.app.homeserver}
      - SYNAPSE_LOG_LEVEL=${SYNAPSE_LOG_LEVEL:-INFO} # DEBUG, INFO, WARNING or ERROR.
      - SYNAPSE_LOG_SENSITIVE=${SYNAPSE_LOG_SENSITIVE:-false}
      - SYNAPSE_LOG_TESTING=${SYNAPSE_LOG_TESTING:-false}
      - SYNAPSE_LOG_CONFIG=${SYNAPSE_LOG_CONFIG:-${SYNAPSE_CONFIG_DIR:-/data}/log.config}
    #  - SYNAPSE_MACAROON_SECRET_KEY=${SYNAPSE_MACAROON_SECRET_KEY}
    #  - SYNAPSE_APPSERVICES=${SYNAPSE_APPSERVICES}
    #  - SYNAPSE_ENABLE_REGISTRATION=${SYNAPSE_ENABLE_REGISTRATION:-false}
    #  - SYNAPSE_REGISTRATION_SHARED_SECRET=${SYNAPSE_ENABLE_REGISTRATION:+${SYNAPSE_REGISTRATION_SHARED_SECRET:-SYNAPSE_REGISTRATION_SHARED_SECRET is missing}}
    #  - SYNAPSE_TURN_URIS=${SYNAPSE_TURN_URIS}
    #  - SYNAPSE_TURN_SECRET=${SYNAPSE_TURN_URIS:+${SYNAPSE_TURN_SECRET:?SYNAPSE_TURN_SECRET is missing}}
    #  - SYNAPSE_EVENT_CACHE_SIZE=${SYNAPSE_EVENT_CACHE_SIZE:-10K}
    #  - SYNAPSE_MAX_UPLOAD_SIZE=${SYNAPSE_MAX_UPLOAD_SIZE:-50M}
    #  - SYNAPSE_RECAPTCHA_PUBLIC_KEY=${SYNAPSE_RECAPTCHA_PUBLIC_KEY:-SYNAPSE_RECAPTCHA_PUBLIC_KEY is missing}
    #  - SYNAPSE_RECAPTCHA_PRIVATE_KEY=${SYNAPSE_RECAPTCHA_PRIVATE_KEY:-SYNAPSE_RECAPTCHA_PRIVATE_KEY is missing}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-synapse}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-Synapse-Key4-Matrix}
    volumes:
      - ${CONTAINER_BASEPATH:-/opt/synapse}:/data
    ports:
      - ${SYNAPSE_HTTP_PORT:-8008}:${SYNAPSE_HTTP_PORT:-8008}
    networks:
      stack:
      proxy:
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.rtr-synapse.entrypoints=https
      - traefik.http.routers.rtr-synapse.rule=${TRAEFIK_ROUTER_RULE:?}
      - traefik.http.services.svc-synapse.loadbalancer.server.scheme=http
      - traefik.http.services.svc-synapse.loadbalancer.server.port=${SYNAPSE_HTTP_PORT:-8008}
      - traefik.http.routers.rtr-synapse.service=svc-synapse
      - traefik.http.routers.rtr-wellknown-synapse.entrypoints=https
      - traefik.http.routers.rtr-wellknown-synapse.rule=Path(`/.well-known/matrix/server`) && Host(`${SYNAPSE_SERVER_NAME:-${TRAEFIK_SUBJECT_CN:?}}`)
      - "traefik.http.middlewares.mdw-response-synapse.plugin.staticResponse.body={\"m.server\": \"${TRAEFIK_SUBJECT_CN:?}:443\"}"
      - traefik.http.middlewares.mdw-response-synapse.plugin.staticResponse.headers.Content-Type=application/json
      - traefik.http.middlewares.mdw-response-synapse.plugin.staticResponse.statusCode=200
      - traefik.http.routers.rtr-wellknown-synapse.middlewares=mdw-response-synapse
      - traefik.http.routers.rtr-wellknown-synapse.service=noop@internal

  db:
    image: docker.io/postgres:12-alpine
    container_name: ${CONTAINER_DB_NAME:-synapse_db}
    hostname: ${HOSTNAME}
    restart: unless-stopped
    environment:
      - TZ=${TZ:-UTC}
      - POSTGRES_USER=${POSTGRES_USER:-synapse}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-Synapse-Key4-Matrix}
      ## https://element-hq.github.io/synapse/latest/postgres.html#set-up-database
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ${CONTAINER_DB_BASEPATH:-${CONTAINER_BASEPATH:-/opt/synapse}/schemas}:/var/lib/postgresql/data
    networks:
      stack: